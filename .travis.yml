branches:
  only:
  - master
matrix:
  include:
  - name: Api Build
    language: generic
    before_deploy:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep graphql/; then exit; fi;
    - cd graphql
    - openssl aes-256-cbc -K $encrypted_9cfd797b0bf8_key -iv $encrypted_9cfd797b0bf8_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - cd ..
    deploy:
      config: graphql/app.yaml
      provider: gae
      keyfile: graphql/serviceaccount.json
      project: mywebsite2
  - name: Amp Build
    language: node_js
    os: linux
    node_js:
    - '10'
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep amp/; then exit; fi;
    - cd amp
    - openssl aes-256-cbc -K $encrypted_21aa1e4fadc4_key -iv $encrypted_21aa1e4fadc4_iv 
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - export $(grep -v '^#' .env | xargs -d '\n')
    - sed -i 's/config/dummy1/g' .gitignore
    - sed -i 's/\.env/dummy2/g' .gitignore
    deploy:
      provider: heroku
      api_key: $HEROKUAPIKEY
      app: joshuawebsiteamp
    after_deploy:
    - sed -i 's/dummy1/config/g' .gitignore
    - sed -i 's/dummy2/\.env/g' .gitignore
  - name: Docs Build
    language: node_js
    os: linux
    node_js:
    - '10'
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep docs/; then exit; fi;
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
    - export PATH="$HOME/.yarn/bin:$PATH"
    - cd docs
    - openssl aes-256-cbc -K $encrypted_3ebe45345dc0_key -iv $encrypted_3ebe45345dc0_iv 
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - export $(grep -v '^#' .env | xargs -d '\n')
    - yarn install
    - yarn build
    deploy:
      provider: pages
      skip_cleanup: true
      github_token: $GITHUBTOKEN  # Set in the settings page of your repository, as a secure variable
      keep_history: false
      on:
        branch: master
  - name: Android Build
    language: android
    jdk: openjdk8
    android:
      components:
      - build-tools-28.0.3
      - android-28
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep flutter/; then exit; fi;
    before_script:
    - cd flutter
    - openssl aes-256-cbc -K $encrypted_799987a421b6_key -iv $encrypted_799987a421b6_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - if [ ! -d "flutter" ] ; then git clone https://github.com/flutter/flutter.git
      -b stable; fi;
    - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
    - gem install bundler && cd android && bundle install && cd ..
    script:
    - flutter packages get
    - flutter pub run flutter_launcher_icons:main
    - flutter test
    - build_number=$(($TRAVIS_BUILD_NUMBER + 100))
    - echo "build number " $build_number
    - flutter build apk --build-number=$build_number
    - cd android && bundle exec fastlane alpha
    cache:
      bundler: true
      directories:
      - "$HOME/.pub-cache"
      - "$HOME/.gradle/caches/"
      - "$HOME/.gradle/wrapper/"
      - "$HOME/.android/build-cache"
      - "$HOME/flutter"
  - name: OSX Desktop Build
    language: node_js
    os: osx
    node_js:
    - '10'
    cache: yarn
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep nuxt/ electron/; then exit; fi;
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
    - export PATH="$HOME/.yarn/bin:$PATH"
    before_script:
    - cd electron
    - openssl aes-256-cbc -K $encrypted_bebd6a7ebc23_key -iv $encrypted_bebd6a7ebc23_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - yarn install
    - yarn build
    script:
    - yarn start
  - name: Linux Desktop Build
    language: node_js
    os: linux
    node_js:
    - '10'
    cache: yarn
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep nuxt/ electron/; then exit; fi;
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
    - export PATH="$HOME/.yarn/bin:$PATH"
    before_script:
    - cd electron
    - openssl aes-256-cbc -K $encrypted_bebd6a7ebc23_key -iv $encrypted_bebd6a7ebc23_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - yarn install
    - yarn build
    script:
    - yarn start
  - name: Windows Desktop Build
    os: windows
    language: bash
    cache: yarn
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep nuxt/ electron/; then exit; fi;
    before_script:
    - choco install nodejs
    - choco install yarn
    - cd electron
    - openssl aes-256-cbc -K $encrypted_bebd6a7ebc23_key -iv $encrypted_bebd6a7ebc23_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    script:
    - "./windowsbuild.bat"
  exclude:
  - name: iOS Build
    os: osx
    language: generic
    osx_image: xcode10.2
    before_install:
    - if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep flutter/; then exit; fi;
    before_script:
    - cd flutter
    - openssl aes-256-cbc -K $encrypted_799987a421b6_key -iv $encrypted_799987a421b6_iv
      -in secrets.tar.enc -out secrets.tar -d
    - tar xvf secrets.tar
    - if [ ! -d "flutter" ] ; then git clone https://github.com/flutter/flutter.git
      -b stable; fi;
    - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
    - gem install bundler && cd ios && bundle install && cd ..
    script:
    - flutter packages get
    - flutter pub run flutter_launcher_icons:main
    - flutter test
    - cd ios && bundle exec fastlane internal
    cache:
      cocoapods: true
      bundler: true
      directories:
      - "$HOME/.pub-cache"
      - "$HOME/flutter"
